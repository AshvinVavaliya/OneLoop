// DO NOT MODIFY
// Automatically generated by Arkana (https://github.com/rogerluan/arkana)
package com.arkanakeys

object ArkanaKeys {
    private val salt = listOf(0xcb, 0xe8, 0x21, 0xc1, 0x51, 0xd7, 0xde, 0xc5, 0xe4, 0xf0, 0x9e, 0x52, 0x59, 0x31, 0x91, 0xd7, 0x4f, 0x9a, 0x8e, 0xd0, 0x38, 0x4e, 0xb8, 0x4d, 0x5f, 0xaa, 0x25, 0x8a, 0xc3, 0x81, 0x6e, 0x66, 0xe3, 0xd5, 0xc6, 0x39, 0x4c, 0x70, 0, 0x21, 0x92, 0x7d, 0xfd, 0xb1, 0x4f, 0xa4, 0xe8, 0xa6, 0xf4, 0x54, 0xf0, 0x29, 0x58, 0x49, 0, 0x64, 0xcf, 0xe7, 0xa0, 0xac, 0xc5, 0x6, 0x7d, 0xab)

    internal fun decode(encoded: List<Int>, cipher: List<Int>): String {
        val decoded = encoded.mapIndexed { index, item ->
            (item xor cipher[(index % cipher.size)]).toByte()
        }.toByteArray()
        return decoded.decodeToString()
    }

    internal fun decodeInt(encoded: List<Int>, cipher: List<Int>): Int {
        return decode(encoded = encoded, cipher = cipher).toInt()
    }

    internal fun decodeBoolean(encoded: List<Int>, cipher: List<Int>): Boolean {
        return decode(encoded = encoded, cipher = cipher).toBoolean()
    }

    object Global {
    }

}
